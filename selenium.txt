<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>projectone</groupId>
  <artifactId>projectone</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <dependencies>
	  
	  <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.15.0</version>
</dependency>

	  <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
<dependency>
    <groupId>io.github.bonigarcia</groupId>
    <artifactId>webdrivermanager</artifactId>
    <version>5.6.2</version>
</dependency>

	  <!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>7.8.0</version>
    <scope>test</scope>
</dependency>

  </dependencies>
  
  <build>
	  
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>

................................................................................class
package projectone;



import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class Abdallah {
	
    
    WebDriver driver = new ChromeDriver();
    
    @BeforeTest
    public void myBeforeTest() {
    	driver.get("https://www.saucedemo.com/");
    }
    
    @Test
    public void myTest ()   {
      System.out.println("done");
    }
    @AfterTest
    public void myAfterTest()   {
    	
    }
}

**********---------------********************-------------*********code:
driver.findElement(By.id("user-name")).sendKeys("standard_user");
    	driver.findElement(By.name("password")).sendKeys("secret_sauce");
    	driver.findElement(By.cssSelector("[data-test=\'login-button\']")).click();
    	List<WebElement> AddtoCartButtons =driver.findElements(By.className("btn_primary"));
    	
    	for(int i = 0;i< AddtoCartButtons.size();i++) {
    		AddtoCartButtons.get(i).click();
//////////////////////////////////////////////////////////////////////////////////////////////////////////
 public void myTest () throws InterruptedException   {
    	driver.findElement(By.id("user-name")).sendKeys("standard_user");
    	driver.findElement(By.name("password")).sendKeys("secret_sauce");
    	driver.findElement(By.cssSelector("[data-test=\'login-button\']")).click();
    	List<WebElement> AddtoCartButtons =driver.findElements(By.className("btn_primary"));
    	
    	for(int i = 0;i< AddtoCartButtons.size();i++) {
    		AddtoCartButtons.get(i).click();
    	}
    	Thread.sleep(3000);
    	driver.findElement(By.className("shopping_cart_link")).click();
????????????????????????????????????????????
    	driver.findElement(By.id("first-name")).sendKeys("abd");
    	
    	driver.findElement(By.id("last-name")).sendKeys("Raja");
    	driver.findElement(By.id("postal-code")).sendKeys("1234");
    	driver.findElement(By.xpath("//*[@id=\"continue\"]")).sendKeys("1234");
    	Thread.sleep(3000);
    	driver.findElement(By.name("finish")).click();
    	String completprocText = driver.findElement(By.className("complete-header")).getText();
    	SoftAssert Assert= new SoftAssert();
        Assert.assertEquals(completprocText, "Thank you");
        Assert.assertAll();
    	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++2 Assertion boolean
         String completprocText = driver.findElement(By.className("complete-header")).getText();
    	boolean Checktext = completprocText.contains("Thank you");
    	System.out.println(Checktext);
    	SoftAssert Assert= new SoftAssert();
       Assert.assertEquals(Checktext, true);
        Assert.assertAll();


          =-0987657890------098765432314567890-================98790-=-=0987865643234567890-=-0--987654324567
    ===============================================================================================================

        String total = driver.findElement(By.className("summary_total_label")).getText();
    	
    	System.out.println(total.substring(7));
    	System.out.println(total.replace("$", " "));
    	String splts[] = total.split("\\$");
    	System.out.println(splts[1]);

        //check URL
    	String ActualUrl = driver.getCurrentUrl();
    	String ExpectUrl ="https://www.saucedemo.com/checkout-step-two.html";
    	//test2
    	myAssert.assertEquals(ActualUrl, ExpectUrl);
    	myAssert.assertAll();s
 ***************************************************************************************************HardAssertion
       
      @Test
    public void TestHardAssert ()   {
    	driver.findElement(By.id("user-name")).sendKeys("standard_user");
    	driver.findElement(By.name("password")).sendKeys("secret_sauce");
    	driver.findElement(By.cssSelector("[data-test=\'login-button\']")).click();
    	List<WebElement> AddtoCartButtons =driver.findElements(By.className("btn_primary"));
    	
    	for(int i = 0;i< AddtoCartButtons.size();i++) {
    		AddtoCartButtons.get(i).click();
    	}
  
    	driver.findElement(By.className("shopping_cart_link")).click();
    	driver.findElement(By.id("checkout")).click();
    	driver.findElement(By.id("first-name")).sendKeys("abd");
    	
    	driver.findElement(By.id("last-name")).sendKeys("Raja");
    	driver.findElement(By.id("postal-code")).sendKeys("1234");
    	driver.findElement(By.id("continue")).click();
    	String total = driver.findElement(By.className("summary_total_label")).getText();
    	
    	
    	String splts[] = total.split("\\$");
    	Assert.assertEquals(splts[1], "140.34");
    	String ActualUrl = driver.getCurrentUrl();
    	String ExpectUrl ="https://www.saucedemo.com/checkout-step-two.html";
    	Assert.assertEquals(ActualUrl, ExpectUrl);
    	Assert.assertEquals(false, true);
    	Assert.assertEquals(3, 3);
		
		
	}

